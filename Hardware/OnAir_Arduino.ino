#include <IRremoteESP8266.h>
#include <Arduino.h>
#include <IRsend.h>
#include <WiFi.h>
#include <IOXhop_FirebaseESP32.h>
#include <ir_Sharp.h>


#define FIREBASE_Host "https://remoteac-e5c64-default-rtdb.asia-southeast1.firebasedatabase.app/"                   // replace with your Firebase Host
#define FIREBASE_authorization_key "GplPtcnNj9CJA6IbMIac9wdF8pbMcPhrCMrg568R" // replace with your secret key



const char* ssid = "TRANSFORMER 2 Ex.";
const char* password = "Revelino1";

const uint16_t kIrLed = 4;  // ESP8266 GPIO pin to use. Recommended: 4 (D2).

IRSharpAc ac(kIrLed);  // Set the GPIO to be used to sending the message.

// Sharp Power
uint16_t SharpAC_power[211] = {3786, 1914,  442, 502,  468, 1442,  414, 490,  468, 1442,  416, 490,  468, 1438,  392, 506,  466,
                               1456,  390, 514,  468, 1418,  440, 464,  492, 1438,  438, 1428,  364, 556,  468, 1442,  336, 566,  470, 1440,  338, 1528,
                               364, 1516,  418, 1466,  338, 556,  440, 514,  364, 1528,  364, 1518,  336, 582,  366, 564,  418, 530,  362, 566,  390,
                               1518,  336, 568,  364, 582,  362, 584,  336, 592,  364, 568,  362, 582,  364, 584,  334, 604,  334, 602,  308, 628,  310,
                               622,  362, 1532,  332, 586,  360, 584,  334, 596,  362, 610,  334, 1564,  310, 594,  336, 586,  360, 1556,  334, 1548,
                               304, 614,  334, 598,  332, 592,  354, 1566,  304, 616,  328, 602,  330, 592,  352, 604,  328, 616,  328, 602,  328, 618,
                               326, 604,  330, 618,  326, 602,  330, 616,  326, 606,  328, 616,  328, 1572,  300, 604,  402, 538,  378, 568,  378, 550,
                               378, 568,  402, 528,  402, 544,  402, 528,  402, 542,  428, 478,  450, 518,  428, 1476,  398, 520,  400, 528,  430, 518,
                               402, 526,  428, 520,  376, 554,  402, 520,  400, 554,  376, 568,  302, 630,  374, 570,  324, 604,  328, 618,  354, 1522,
                               352, 1522,  376, 1512,  380, 1478,  380, 564,  406, 516,  430, 524,  384, 540,  404, 526,  408, 536,  382, 548,  460
                              };
// UNKNOWN 3082FE42

// Sharp Temp Up
uint16_t SharpAC_tempUp[211] = {3758, 1942,  416, 530,  416, 1448,  418, 530,  388, 1520,  388, 490,  440, 1494,  390, 516,
                                440, 1444,  416, 514,  442, 1470,  388, 530,  416, 1466,  416, 1466,  390, 530,  412, 1478,  392, 528,  416, 1494,
                                390, 1508,  364, 1478,  416, 1468,  388, 528,  416, 530,  416, 1484,  390, 1482,  390, 528,  390, 540,  416, 528,  392,
                                540,  388, 1504,  390, 528,  416, 528,  388, 540,  418, 530,  386, 542,  416, 528,  388, 542,  414, 1496,  388, 516,
                                416, 506,  412, 542,  440, 1470,  390, 490,  440, 532,  414, 514,  442, 1466,  392, 1474,  390, 528,  416, 530,  416,
                                1484,  390, 1474,  390, 528,  416, 530,  388, 542,  388, 1504,  390, 528,  416, 530,  414, 516,  414, 532,  414, 514,
                                416, 532,  412, 490,  444, 506,  412, 540,  416, 530,  414, 516,  416, 530,  414, 516,  442, 1470,  388, 514,  416, 532,
                                414, 514,  418, 502,  518, 438,  492, 454,  490, 440,  492, 454,  416, 512,  416, 530,  416, 514,  442, 1444,  416, 530,
                                466, 438,  442, 1450,  416, 528,  416, 528,  362, 540,  444, 528,  362, 568,  416, 530,  362, 566,  466, 452,  390, 568,
                                466, 478,  468, 1430,  392, 1450,  516, 1388,  468, 1414,  442, 478,  466, 436,  494, 464,  466, 454,  490, 458,  440,
                                1466,  416, 504,  468
                               };  // UNKNOWN 531CC212

//  Temp Down
uint16_t SharpAC_tempDown[211] = {3788, 1914,  442, 504,  466, 1442,  364, 538,  418, 1492,  414, 506,  466, 1432,  440, 464,
                                  492, 1420,  388, 530,  416, 1490,  364, 532,  414, 1520,  388, 1478,  414, 506,  364, 1528,  414, 506,  440, 1470,
                                  414, 1452,  440, 1442,  366, 1520,  386, 518,  366, 580,  366, 1526,  366, 1516,  340, 580,  364, 566,  414, 532,
                                  362, 544,  414, 1496,  360, 544,  416, 530,  414, 514,  390, 556,  416, 514,  442, 504,  418, 514,  468, 478,  468,
                                  464,  468, 476,  466, 464,  492, 1418,  440, 464,  440, 506,  390, 540,  416, 1492,  416, 1450,  366, 554,  442, 504,
                                  418, 1482,  414, 1452,  442, 478,  444, 502,  440, 490,  466, 1444,  414, 490,  442, 504,  414, 516,  416, 530,  414,
                                  516,  416, 530,  390, 542,  414, 532,  388, 542,  390, 556,  388, 516,  416, 556,  390, 542,  416, 1490,  364, 530,
                                  442, 514,  392, 554,  418, 512,  416, 530,  418, 512,  392, 554,  416, 512,  418, 528,  418, 512,  418, 506,  442,
                                  1482,  390, 488,  442, 528,  418, 1480,  418, 520,  416, 504,  442, 488,  442, 502,  442, 488,  444, 502,  442, 464,
                                  470, 478,  440, 512,  444, 502,  444, 1456,  362, 1502,  444, 1436,  444, 1440,  420, 500,  364, 564,  444, 486,
                                  470, 1412,  444, 500,  444, 1454,  418, 486,  392
                                 };  // UNKNOWN 3F011E38

// Sharp Fan
uint16_t SharpAC_fan[211] = {3812, 1864,  468, 502,  468, 1416,  468, 434,  498, 1412,  468, 478,  468, 1432,  442, 460,  470,
                             1440,  416, 502,  442, 1438,  418, 502,  470, 1442,  366, 1502,  416, 502,  466, 1402,  442, 502,  466, 1444,  416, 1450,
                             440, 1440,  416, 1470,  416, 488,  416, 530,  468, 1424,  390, 1492,  388, 530,  414, 516,  416, 530,  388, 542,  414, 1496,
                             362, 540,  390, 556,  390, 486,  444, 556,  390, 540,  390, 534,  388, 564,  390, 534,  388, 540,  414, 556,  366, 566,  392,
                             1518,  364, 516,  414, 534,  410, 516,  418, 1516,  390, 1476,  364, 554,  392, 554,  390, 516,  418, 530,  414, 540,  392,
                             554,  392, 1508,  392, 1476,  364, 530,  414, 532,  414, 540,  416, 530,  416, 514,  392, 554,  416, 514,  414, 530,  416,
                             490,  416, 554,  416, 514,  392, 554,  416, 514,  440, 1444,  414, 514,  416, 528,  418, 512,  418, 530,  416, 514,  392,
                             554,  416, 514,  418, 530,  416, 514,  418, 528,  416, 514,  418, 1494,  416, 1450,  392, 502,  470, 1448,  390, 546,  392,
                             546,  390, 548,  390, 522,  414, 548,  390, 540,  416, 532,  392, 548,  392, 546,  392, 522,  440, 1440,  416, 1490,  416,
                             1464,  418, 1466,  392, 512,  418, 530,  416, 512,  418, 506,  440, 1482,  416, 1450,  392, 528,  444
                            };  // UNKNOWN EA9B9791

// Sharp Mode
uint16_t SharpAC_mode[211] = {3642, 2082,  272, 648,  326, 1592,  248, 648,  322, 1586,  270, 632,  326, 1584,  272, 648,
                              298, 1610,  244, 672,  300, 1586,  270, 648,  300, 1582,  298, 1610,  246, 672,  298, 1594,  248, 672,  300, 1610,  346,
                              1502,  396, 1494,  372, 1510,  346, 548,  396, 550,  396, 1510,  372, 1510,  346, 572,  372, 548,  426, 504,  400, 518,
                              450, 1476,  398, 506,  426, 518,  426, 504,  426, 520,  426, 504,  426, 518,  428, 502,  428, 520,  424, 502,  404, 542,
                              404, 526,  356, 1556,  374, 518,  330, 624,  332, 598,  358, 1550,  330, 1534,  304, 614,  334, 612,  334, 572,  358, 588,
                              360, 570,  360, 586,  412, 520,  436, 1472,  386, 518,  414, 532,  414, 518,  410, 534,  412, 536,  386, 552,  386, 554,
                              384, 552,  386, 546,  410, 534,  386, 544,  412, 516,  388, 558,  390, 1502,  362, 558,  392, 554,  338, 592,  394, 552,
                              390, 542,  416, 506,  438, 514,  420, 528,  414, 516,  418, 528,  416, 492,  464, 1428,  440, 480,  468, 478,  442, 488,
                              466, 480,  440, 490,  442, 504,  440, 508,  416, 504,  442, 504,  440, 490,  440, 504,  416, 516,  440, 506,  414, 1478,
                              390, 1492,  390, 1494,  416, 1450,  442, 476,  444, 502,  416, 516,  414, 532,  390, 1510,  390, 514,  418, 528,  442
                             };  // UNKNOWN 5F4A2E0

// Sharp Swing
uint16_t SharpAC_swing[211] = {3760, 1940,  416, 548,  416, 1436,  420, 528,  388, 1494,  390, 540,  414, 1488,  390, 528,  416,
                               1450,  416, 504,  414, 1504,  390, 504,  466, 1470,  390, 1450,  416, 502,  416, 1504,  390, 528,  416, 1496,  416, 1420,
                               444, 1466,  416, 1464,  390, 530,  388, 542,  388, 1504,  416, 1440,  416, 530,  414, 502,  418, 514,  442, 504,  442, 1456,
                               416, 488,  442, 504,  416, 516,  442, 530,  388, 514,  444, 530,  388, 542,  492, 456,  388, 516,  516, 454,  388, 540,  416,
                               1470,  414, 488,  442, 506,  438, 490,  466, 1468,  392, 1476,  390, 530,  416, 530,  416, 1460,  412, 1448,  418, 528,  416,
                               530,  362, 540,  416, 1502,  442, 480,  466, 450,  494, 438,  494, 478,  466, 436,  520, 454,  464, 440,  492, 478,  414, 490,
                               494, 478,  414, 488,  468, 1470,  390, 1474,  442, 1440,  418, 480,  412, 518,  466, 480,  412, 544,  466, 454,  466, 488,
                               468, 478,  466, 464,  470, 476,  468, 464,  468, 476,  494, 1406,  468, 452,  544, 1352,  468, 1408,  464, 454,  416, 514,
                               542, 402,  416, 514,  468, 502,  390, 538,  444, 502,  416, 492,  466, 502,  416, 490,  440, 1476,  442, 1438,  442, 1440,
                               388, 1494,  390, 514,  442, 504,  390, 540,  416, 1494,  390, 490,  442, 528,  416, 514,  466
                              };  // UNKNOWN 51607EF2
bool varbool = true;
int varfan = 0;
int varswing = 0;
int varmode = 0;

WiFiServer wifiServer(80);

void setup() {
  ac.begin();
  Serial.begin(115200);

  delay(1000);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting..");
  }

  Serial.print("Connected to WiFi. IP:");
  Serial.println(WiFi.localIP());

  wifiServer.begin();

  Firebase.begin(FIREBASE_Host, FIREBASE_authorization_key);
  Firebase.setInt("command", 0);
}

void acpower() {
  varbool = !varbool;
  ac.setPower(varbool);

}

void acfan() {
  if (varfan == 0) {
    ac.setFan(kSharpAcFanAuto);
    varfan++;
  }
  if (varfan == 1) {
    ac.setFan(kSharpAcFanMin);
    varfan++;
  }
  if (varfan == 2) {
    ac.setFan(kSharpAcFanMed);
    varfan++;
  }
  if (varfan == 3) {
    ac.setFan(kSharpAcFanHigh);
    varfan++;
  }
  if (varfan == 4) {
    ac.setFan(kSharpAcFanMax);
    varfan++;
  }
  else {
    varfan = 0;
  }
}

void acmode() {
  if (varmode == 0) {
    ac.setMode(kSharpAcDry);
    varmode++;
  }
  if (varmode == 1) {
    ac.setMode(kSharpAcCool);
    varmode++;
  }
  if (varmode == 2) {
    ac.setMode(kSharpAcHeat);
    varmode++;
  }
  else {
    varmode = 0;
  }
}

void acswing() {
  if (varswing == 0) {
    ac.setSwingV(kSharpAcSwingVLow);
    varswing++;
  }
  if (varswing == 1) {
    ac.setSwingV(kSharpAcSwingVOff);
    varswing++;
  }
  else {
    varswing = 0;
  }
}

void loop() {
  int command = Firebase.getInt("command");
  int temp = Firebase.getInt("temp");

  //Power ON
  if (command == 1) {
    acpower();  // Send a raw data capture at 38kHz.
    Serial.println("Turning ON/OFF");
    delay(1000);
    Firebase.setInt("command", 0);
  }

  //TempSet
  else if (command == 2) {
    ac.setTemp(temp);  // Send a raw data capture at 38kHz.
    Serial.println("Temperature Set");
    delay(1000);
    Firebase.setInt("command", 0);
  }

  //Fan
  else if (command == 3) {
    acfan();  // Send a raw data capture at 38kHz.
    Serial.println("Adjusting FAN");
    delay(1000);
    Firebase.setInt("command", 0);
  }

  //Mode
  else if (command == 4) {
    acmode();  // Send a raw data capture at 38kHz.
    Serial.println("Changing MODE");
    delay(1000);
    Firebase.setInt("command", 0);
  }

  //Swing
  else if (command == 5) {
    acswing();  // Send a raw data capture at 38kHz.
    Serial.println("Adjusting SWING");
    delay(1000);
    Firebase.setInt("command", 0);
  }

}
